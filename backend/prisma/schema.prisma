// This is your Prisma schema file

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // You can change this to your preferred database
  url      = env("DATABASE_URL")
}

model Post {
  id        String   @id @default(cuid())
  post_id   String // @unique Original post ID from the source - right now not making it unique, easier for testing purposes
  board     String? // Optional board name
  timestamp DateTime
  poster    String // Usually "Anonymous" but keeping it flexible
  is_nsfw   Boolean  @default(false)
  content   Content  @relation(fields: [contentId], references: [id])
  contentId String   @unique
  image     Image?   @relation(fields: [imageId], references: [id])
  imageId   String?

  @@index([post_id])
  @@index([timestamp])
}

model Content {
  id        String   @id @default(cuid())
  greentext String[] // Array of greentext lines
  text      String[] // Array of regular text lines
  post      Post? // One-to-one relation with Post

  // Full-text search indexes (if using PostgreSQL)
  @@index([greentext])
  @@index([text])
}

model Embedding {
  id        String  @id @default(cuid())
  image     Image   @relation(fields: [imageId], references: [id])
  imageId   String  @unique
  full_text String // Combined text content from all posts in the image
  vector    Float[] // The embedding vector

  @@index([imageId])
}

model Image {
  id          String     @id @default(cuid())
  filename    String?
  size        String?
  format      String?
  dimensions  String?
  description String?
  posts       Post[] // One image can have multiple posts
  embedding   Embedding? // One-to-one with embedding
}
